@model GeneratorBase.MVC.Models.T_StudentPerformance
@{
    ViewBag.Title = "Create StudentPerformance";
    Layout = null;
}
<script>
    $(document).ready(function () {
        try {
            var hostingEntityName = "";
            if ('@Convert.ToString(ViewData["AssociatedType"])' != null) {
                hostingEntityName = '@Convert.ToString(ViewData["AssociatedType"])';
                 $('#' + hostingEntityName + 'ID').attr("lock","true");
				  $('#' + hostingEntityName + 'ID').trigger("change");
            }
        }
        catch (ex) { }
    });
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.T_StudentPerformanceIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_StudentPerformanceIsHiddenRule);
    }
}
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("CreateQuick", "T_StudentPerformance",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
    Html.ValidationSummary(true);
    Html.EnableClientValidation();
	<label id="ErrMsgQuickAdd" class="text-primary small pull-right" style="color:red; vertical-align:middle; font-weight:100;"></label>
    <div id="errorContainerQuickAdd" style="display: none">
        <div id="errorsMsgQuickAdd"></div>
        <div id="errorsQuickAdd"></div>
    </div>
    <div class="row">
	@Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"]))
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="panel panel-default AppForm">
                <div class="panel-body">
               <div class="row">         
				 <div class='col-sm-6'  id="dvT_StudentCodeID">
                        <div class='form-group'>
                            <label>@Html.LabelFor(model => model.T_StudentCodeID) </label>
                            <div class="input-group" style="width: 100%;">
									@Html.DropDownList("T_StudentCodeID", null, "-- Select --", new {       @class = "chosen-select form-control", @HostingName = "T_Student", @dataurl = Url.Action("GetAllValue", "T_Student",new { caller = "T_StudentCodeID" }) })
                                @Html.ValidationMessageFor(model => model.T_StudentCodeID)
                            </div>
                        </div>
                    </div>
					<div class='col-sm-6' id="dvT_Mark1">
                                <div class='form-group'>
                                    <label>@Html.LabelFor(model => model.T_Mark1) </label>
									 
                                    @Html.TextBoxFor(model => model.T_Mark1, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Mark1)
									
                                </div>
					</div>
					<div class='col-sm-6' id="dvT_Mark2">
                                <div class='form-group'>
                                    <label>@Html.LabelFor(model => model.T_Mark2) </label>
									 
                                    @Html.TextBoxFor(model => model.T_Mark2, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Mark2)
									
                                </div>
					</div>
					<div class='col-sm-6' id="dvT_TotalMarks">
                                <div class='form-group'>
                                    <label>@Html.LabelFor(model => model.T_TotalMarks) </label>
									 
                                    @Html.TextBoxFor(model => model.T_TotalMarks, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(model => model.T_TotalMarks)
									
                                </div>
					</div>
							<div class='col-sm-6' id="dvT_Grade">
                                <div class='form-group'>
                                    <label>@Html.LabelFor(model => model.T_Grade) </label>
                                    @Html.TextAreaFor(model => model.T_Grade, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Grade)
                                </div>
							</div>
							<div class='col-sm-6' id="dvT_Remarks">
                                <div class='form-group'>
                                    <label>@Html.LabelFor(model => model.T_Remarks) </label>
                                    @Html.TextAreaFor(model => model.T_Remarks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.T_Remarks)
                                </div>
							</div>
       </div>
                        </div>
                    </div>
                </div>
        </div>
		<button id="CancelQuickAdd" type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>
		  <input type="button" value="Get Calculation" onclick="GetCalculationValue(event,'@Url.Action("GetCalculationValues")');" class="btn btn-default btn-sm" />

		var busineesrule = User.businessrules.Where(p => p.EntityName == "T_StudentPerformance").ToList();
        if (ViewBag.IsAddPop != null)
		{
			<input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="QuickAdd(event,'@busineesrule',@busineesrule.Count);" />
		}
		else
		{
			<input type="submit" value="Create" class="btn btn-primary btn-sm" onclick="QuickAddFromIndex(event,true,'T_StudentPerformance','@ViewData["AssociatedType"]','@busineesrule',@busineesrule.Count);" />
		}
}
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Common3/chosen.jquery.js" type="text/javascript"></script>
<script type="text/javascript">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>


