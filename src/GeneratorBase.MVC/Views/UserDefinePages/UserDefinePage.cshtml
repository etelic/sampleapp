@model GeneratorBase.MVC.Models.EditUserDefinePageViewModel
@{
    ViewBag.Title = "User Define Page";
}
<script language="JavaScript">
    function SetGrid() {
        var value = $('#UserPages').val();
        var url = $('#UserPages').attr("dataurl");
        window.location.href = url + "?page=" + value;
    }
</script>
<link href='@Url.Content("~/Scripts/summernote.css")' rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/summernote.js")" type="text/javascript"></script>
<script type="text/javascript">
    function initHtmlEditor() {
        $('#summernote').summernote();
    }
    $(document).ready(function () {
        initHtmlEditor();
    });
    function bindForm() {
        initHtmlEditor();
        var value = $('#UserPages').val();
        if (value == '0') {
            fillErrorList("The Page Name field is required.");
            showValidationErrors(true);
            return false;
        }
    }
    function showValidationErrors(isShown) {
        if (isShown) {
            $("#errorContainer").show();
        } else {
            $("#errorContainer").hide();
        }
    }
    function fillErrorList(errors) {
        $("#errors").html("");
        var list = document.createElement('ul');
        var item = document.createElement('li');
        item.appendChild(document.createTextNode(errors));
        list.appendChild(item);
        $("#errors").html(list);
    }
</script>
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-thumbs-up text-primary" style="margin-bottom:-20px;"></i> User Define Page  <i class="glyphicon glyphicon-chevron-right small"></i>  <span>Change Content</span>
        </h1>
    </div>
</div>
@using (Html.BeginForm("SaveUserDefinePage", "UserDefinePages", FormMethod.Post, new { id = "createForm", encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.PageName)
    <div id="errorContainer" class="alert alert-danger" style="display: none">
        <div id="errors"></div>
    </div>
    <div class="row">
        <table style="margin:5px 15px 15px 15px;">
            <tr>
                <td>Select Page</td>
                <td width="200px" style="padding-left:10px;">
                    <div class="input-group">
                        @Html.DropDownList("UserPages", null, new { @onchange = "SetGrid();", @class = "form-control", @dataurl = Url.Action("UserDefinePage", "UserDefinePages", null) })
                        <div class="input-group-btn">
                            <button class="btn btn-default tip-top" data-placement="top" data-original-title="Quick Add" data-toggle="modal" data-target="#quickaddUserPage" onclick=@Html.Raw("OpenQuickQddPopUp('dvQAddquickaddUserPage');")>
                                <span class="fam-add"></span>
                            </button>
                        </div>
                        @Html.ValidationMessageFor(model => model.PageName)
                    </div>
                </td>
            </tr>
        </table>
        <div class="col-md-12 col-sm-12 col-sx-12">
            <div class="panel panel-default">
                <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                    Select Roles
                </div>
                <div class="panel-body" style="margin:0px; padding:8px;">
                    @Html.EditorFor(model => model.Roles)
                </div>
            </div>
        </div>
        <div class="col-md-12 col-sm-12 col-sx-12">
            <div class="panel panel-default">
                <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                    Change Page Content - @Html.DisplayFor(model => model.PageName)
                </div>
                <div class="panel-body" style="margin:0px; padding:8px;">
                    @Html.TextAreaFor(model => model.PageContent, new { @id = "summernote" })
                </div>
            </div>
        </div>
    </div>
    <input type="submit" value="Save" onclick="return bindForm();" class="btn btn-primary" /> //
}
<div class="modal fade" id="quickaddUserPage" tabindex="-1" role="dialog" aria-labelledby="quickaddUserPageLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="quickaddUserPageLabel"> Create User Define Page</h4>
            </div>
            <div id="dvQAddquickaddUserPage" class="modal-body" data-url="@Url.Action("Create", "UserDefinePages",new {UrlReferrer = Request.Url})">
            </div>
        </div>
    </div>
</div>

