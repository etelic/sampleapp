@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Home";
}
<script>
    function HomeSearchClick(e, EntityName, url) {
        var txtval = $("#SearchString" + EntityName).val();
        url = url + "?searchString=" + txtval + "&IsDeepSearch=true&parent=Home";
        window.location.href = url;
    }
    function SearchKeyPress(e, entityName) {
        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
            $("#" + entityName + "Search").bind("click", (function () {
            }));
            $("#" + entityName + "Search").trigger("click");
        }
    }
</script>
@if (ViewBag.PageRoles != null && ViewBag.PageContent == null)
{
      <script type="text/javascript">
        $(document).ready(function () {
            $('#myModal').modal('show');
        });
		function getrole() {
            var selctedvalues = "";
            $("input[name='rdbroles']").each(function () {
                chkid = $(this).attr('id');
                var checked = "false";
                if ($("input[id='" + chkid + "']:checked").length == '1') {
                    selctedvalues += $(this).attr('value') + ",";
                }
            })
            if (selctedvalues != '' && typeof selctedvalues != 'undefined') {
                var data = { "key": selctedvalues };
                var urlSet = '@Url.Action("setRoleValue", "Home")';
                var url = '@Url.Action("Index", "Home")';
                $.getJSON(urlSet, data, function (data) {
                    if (data == true) {
                        window.location.href = url;
                    }
                });
            }
            else {
                alert('Please select at lease one role.')
            }
        }
    </script>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                            Please select roles to login with
                        </div>
                        <div class="panel-body" style="margin:0px; padding:8px;">
                            @foreach (string pagerole in ViewBag.PageRoles)
                            {
								<div style="display:block;">
								<label for="@pagerole" class="check">
                                    <input type="checkbox" id="@pagerole" name="rdbroles" value="@pagerole" /> @pagerole
                                </label>
								 </div>
                            }
                        </div>
                    </div>
                    <a onclick="getrole();" class="btn btn-primary btn-sm">Login</a>
                    <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-default btn-sm" > Logout</a>
                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.RegistrationEntity != null)
{
    var AutoRegistration = Convert.ToString(ViewBag.RegistrationEntity).Split(",".ToCharArray());
    <script type="text/javascript">
        $(document).ready(function () {
            $('#RegistrationModal').modal('show');
        });
    </script>
    <div class="modal fade" id="RegistrationModal" tabindex="-1" role="dialog" aria-labelledby="RegistrationModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix" style="margin:0px; padding:8px;">
                           <span class="fam-application-form-edit"></span> Click to Register as
                        </div>
                        <div class="panel-body" style="margin:0px; padding:8px;">
                            <div style="display:block;">
                                @foreach (string reg in AutoRegistration)
                                {
                                    var Ent = ModelReflector.Entities.FirstOrDefault(p => p.Name == reg);
                                    if (Ent != null)
                                    {
                                        @Html.ActionLink(Ent.DisplayName, "AutoRegistration", reg, new { UserId = ViewBag.UserId }, new { @class = "btn btn-default btn-sm", @style="margin-right:5px;"})
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <br />
                    @Html.ActionLink("Continue without Registration", "Index", "Home", null, new { @class = "btn btn-default btn-sm" })
                    <a href="javascript:document.getElementById('logoutForm').submit()" class="btn btn-primary btn-sm pull-right"> Logout</a>
                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.PageRoles == null && ViewBag.PageContent == null && ViewBag.RegistrationEntity == null)
{
<script>
$(document).ready(function () {
var datevalue = $("#lastlogin").html();
if(datevalue != undefined && datevalue.length > 0)
{
	var date = new Date(datevalue+' UTC');
	$("#lastlogin").html(date.toLocaleString());
} else $("#lastlogin").html("You logged in first time.");
$("a:first",$("#graph")).click();
});
</script>
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-home text-primary" style="margin-bottom:-20px;"></i> Home
        </h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="row">
        <div class="clearfix"></div>
        <div class="col-sm-12">
		<ul class="nav nav-tabs">
<li class="active"><a href="#systeminfo" data-toggle="tab">Home</a></li>
                <li class=""><a href="#graph" data-toggle="tab">Graph</a></li>
				<li><a href="#allentity" data-toggle="tab">All Entities</a></li>
                <li><a href="#favorite" data-toggle="tab">My Favorite</a></li>
                <li><a href="#about" data-toggle="tab">About</a></li>
            </ul>
             <div class="tab-content" style="border-bottom: 0px solid #ddd;">
	<div class="tab-pane fade in" id="graph">
        <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
            <div class="panel-body" style="min-height:240px;">
 @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Session"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Session");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Session";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_Session" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Session');">
                                       @DisplayString
				</a> 
}
 @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_TimeSlots"))
 {
  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TimeSlots");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Time Slots";
				<a class="label label-primary" style="margin-right:5px;" dataurl="@Url.Action("ShowGraph", "T_TimeSlots" , new { type = "all" })" onclick="OpenDashBoardFromHome(this,'EntityGraph','Time Slots');">
                                       @DisplayString
				</a> 
}
			<div class="panel panel-default" style="margin:10px 0px 0px 0px;">
                                <div class="panel-heading clearfix" style="padding:8px;">
                                    <h4 class="panel-title" style="display:block; " id="EntityGraphLabel"></h4>
                                </div>
                                <div class="panel-body" style="padding:0px 0px 0px 0px; border:0px;">
                                    <div id="EntityGraph">
                                    </div>
                                </div>
            </div>
            </div>
			
        </div>
    </div>
  
	 <div class="tab-pane active" id="systeminfo">
                     <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
                        <div class="panel-body" >

                           
                                <div class="row">
                                    <div class="col-md-6 col-sm-6" style="padding:4px 10px;">
                                         <div class="dashboard-block" style="height: 165px; display:-ms-flexbox;">
                                            <div class="rotate">
                                                <i class="fa fa-user"></i>
                                            </div>
                                            <div class="details" style="height: 137%;overflow-y: auto;overflow-x:hidden;width: 108%;">
                                                <span class="title">User Information </span>
                                                <span class="sub text-info">@User.Name</span><small>@ViewBag.UserName </small><br /> <small>@ViewBag.Useremail</small>
												 <br/><small> Role : @String.Join(",", ViewBag.LoginRoles)</small>
                                            </div><!--/details-->

                                        </div>
                                    </div>
									 @if (ViewBag.LastLoggedIn != null)
									{
                                    <div class="col-md-6 col-sm-6" style="padding:4px 10px;">
                                        <div class="dashboard-block" style="height:165px;">
                                            <div class="rotate">
                                               <i class="fa fa-sign-in"></i>
                                            </div>
                                            <div class="details">
                                                <span class="title">Last Logged-In</span>
                                                <span id="lastlogin" class="sub text-danger">@ViewBag.LastLoggedIn</span>
                                            </div><!--/details-->

                                        </div>
                                    </div>
									}
                                        
 </div><!--/row-->
										          @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Client"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Client");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Client";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Client"})">
                    <h4 class="text-info"><span class="label label-info pull-right">@ViewBag.T_ClientCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_ClientC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ClientC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_ClientCSearch" onclick="HomeSearchClick(event,'T_ClientC','@Html.Raw(Url.Action("Index", "T_Client"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Client"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_Client"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Client", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_TimeSlots"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TimeSlots");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Time Slots";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_TimeSlots"})">
                    <h4 class="text-success"><span class="label label-success pull-right">@ViewBag.T_TimeSlotsCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_TimeSlotsC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_TimeSlotsC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_TimeSlotsCSearch" onclick="HomeSearchClick(event,'T_TimeSlotsC','@Html.Raw(Url.Action("Index", "T_TimeSlots"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_TimeSlots"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_TimeSlots"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_TimeSlots", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_LearningCenter"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LearningCenter");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Learning Center";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_LearningCenter"})">
                    <h4 class="text-warning"><span class="label label-warning pull-right">@ViewBag.T_LearningCenterCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_LearningCenterC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LearningCenterC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_LearningCenterCSearch" onclick="HomeSearchClick(event,'T_LearningCenterC','@Html.Raw(Url.Action("Index", "T_LearningCenter"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_LearningCenter"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_LearningCenter"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_LearningCenter", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
          @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Session"))
			{  
			 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Session");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Session";
			 <div class="well index-box">
                <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Session"})">
                    <h4 class="text-danger"><span class="label label-danger pull-right">@ViewBag.T_SessionCount</span> <span class="index-boxTitle pull-left">@DisplayString</span> </h4>
                </a>
				<div style="clear:both"></div>
                <div class="input-group" style="margin-top:10px;">
                    @Html.TextBox("SearchStringT_SessionC", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SessionC');", @placeholder = "Search" })
                    <div class="input-group-btn">
                        <a id="T_SessionCSearch" onclick="HomeSearchClick(event,'T_SessionC','@Html.Raw(Url.Action("Index", "T_Session"))');"
                            data-original-title="List Search"
                            class="btn btn-default btn-default tip-top"
                            style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12" style="padding:0px; margin:5px 0px 0px 0px;">
                    <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Session"})" class="btn btn-default btn-xs" style="width:48%">View</a>
                    @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_Session"))
                    {
                        <a onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Session", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") style="width:48%" class="btn btn-default btn-xs"> Add </a>
                    }
                </div>
            </div>
		}
                               
                        </div>
                    </div>
	</div>
    <div class="tab-pane fade" id="about">
        <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
            <div class="panel-body" style="min-height:240px;">
                @if (ViewBag.AboutCompany != null)
				{
					@Html.Raw(ViewBag.AboutCompany)
				}
            </div>
        </div>
    </div>
	 <div class="tab-pane fade" id="allentity">
                    <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
                        <div class="panel-body">
	 <div id="Des_Table" class="table-responsive">
                                <table class="table table-bordered table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th class="col1" style="width:70px;">Actions</th>
                                            <th style="width:30%;">Entity Name</th>
                                            <th style="width:30%;">Entity Description</th>
                                            <th>Search</th>
                                        </tr>
                                    </thead>
				@if (User.CanView("T_Client"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Client");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Client";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Client" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_Client"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Client", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Client" })">@DisplayString</a></td>
                                            <td>Client</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_ClientA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_ClientA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_ClientASearch" onclick="HomeSearchClick(event,'T_ClientA','@Html.Raw(Url.Action("Index", "T_Client"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_LearningCenter"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LearningCenter");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Learning Center";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LearningCenter" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_LearningCenter"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_LearningCenter", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_LearningCenter" })">@DisplayString</a></td>
                                            <td>Learning Center</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_LearningCenterA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_LearningCenterA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_LearningCenterASearch" onclick="HomeSearchClick(event,'T_LearningCenterA','@Html.Raw(Url.Action("Index", "T_LearningCenter"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_Session"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Session");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Session";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Session" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_Session"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_Session", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_Session" })">@DisplayString</a></td>
                                            <td>Session</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SessionA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SessionA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SessionASearch" onclick="HomeSearchClick(event,'T_SessionA','@Html.Raw(Url.Action("Index", "T_Session"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_SessionEvents"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_SessionEvents");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Session Events";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SessionEvents" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_SessionEvents"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_SessionEvents", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SessionEvents" })">@DisplayString</a></td>
                                            <td>Events of Session</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SessionEventsA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SessionEventsA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SessionEventsASearch" onclick="HomeSearchClick(event,'T_SessionEventsA','@Html.Raw(Url.Action("Index", "T_SessionEvents"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_SessionEventsClient"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_SessionEventsClient");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Session EventsClient";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SessionEventsClient" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_SessionEventsClient"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_SessionEventsClient", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SessionEventsClient" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between SessionEvents and Client.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SessionEventsClientA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SessionEventsClientA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SessionEventsClientASearch" onclick="HomeSearchClick(event,'T_SessionEventsClientA','@Html.Raw(Url.Action("Index", "T_SessionEventsClient"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_SessionClientAssociation"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_SessionClientAssociation");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "SessionClientAssociation";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SessionClientAssociation" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_SessionClientAssociation"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_SessionClientAssociation", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_SessionClientAssociation" })">@DisplayString</a></td>
                                            <td>Bridge Entity for M:M association between Session and Client.</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_SessionClientAssociationA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_SessionClientAssociationA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_SessionClientAssociationASearch" onclick="HomeSearchClick(event,'T_SessionClientAssociationA','@Html.Raw(Url.Action("Index", "T_SessionClientAssociation"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
				@if (User.CanView("T_TimeSlots"))
				{
				 var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TimeSlots");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Time Slots";
					<tr>
						<td>
							  <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TimeSlots" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("T_TimeSlots"))
                                        {
											<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "T_TimeSlots", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "T_TimeSlots" })">@DisplayString</a></td>
                                            <td>Time slots for Meeting</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringT_TimeSlotsA", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'T_TimeSlotsA');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="T_TimeSlotsASearch" onclick="HomeSearchClick(event,'T_TimeSlotsA','@Html.Raw(Url.Action("Index", "T_TimeSlots"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
				}
					@if (User.CanView("ApplicationFeedback"))
                    {
						<tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedback" })" class="btn btn-default btn-xs"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("ApplicationFeedback"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ApplicationFeedback", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');") class="btn btn-default btn-xs"><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                       </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedback" })">Application Feedback</a></td>
                                            <td>Application Feedback</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringApplicationFeedback", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ApplicationFeedback');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="ApplicationFeedbackSearch" onclick="HomeSearchClick(event,'ApplicationFeedback','@Html.Raw(Url.Action("Index", "ApplicationFeedback"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
                    }
					@if (User.CanView("ApplicationFeedbackStatus"))
                    {
                        <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackStatus" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("ApplicationFeedbackStatus"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ApplicationFeedbackStatus", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                      </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackStatus" })">Application Feedback Status</a></td>
                                            <td>Application Feedback Status</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringApplicationFeedbackStatus", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ApplicationFeedbackStatus');", @placeholder = "Search" })
                                <div class="input-group-btn">
                                    <a id="ApplicationFeedbackStatusSearch" onclick="HomeSearchClick(event,'ApplicationFeedbackStatus','@Html.Raw(Url.Action("Index", "ApplicationFeedbackStatus"))');"
                                       data-original-title="List Search"
                                       class="btn btn-default btn-default tip-top"
                                       style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
                                </div>
                                                </div>
                                            </td>
                                        </tr>
                    }
                    @if (User.CanView("ApplicationFeedbackType"))
                    {
                        <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackType" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("ApplicationFeedbackType"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ApplicationFeedbackType", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                     </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ApplicationFeedbackType" })">Application Feedback Type</a></td>
                                            <td>Application Feedback Type</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringApplicationFeedbackType", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ApplicationFeedbackType');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="ApplicationFeedbackTypeSearch" onclick="HomeSearchClick(event,'ApplicationFeedbackType','@Html.Raw(Url.Action("Index", "ApplicationFeedbackType"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
					@if (User.CanView("FeedbackPriority"))
                    {
                       <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackPriority" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("FeedbackPriority"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "FeedbackPriority", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
										 	</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackPriority" })">Feedback Priority</a></td>
                                            <td>Feedback Priority</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringFeedbackPriority", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'FeedbackPriority');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="FeedbackPrioritySearch" onclick="HomeSearchClick(event,'FeedbackPriority','@Html.Raw(Url.Action("Index", "FeedbackPriority"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
                    @if (User.CanView("FeedbackSeverity"))
                    {
                       <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackSeverity" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("FeedbackSeverity"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "FeedbackSeverity", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
												}
                                            	</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackSeverity" })">Feedback Severity</a></td>
                                            <td>Feedback Severity</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringFeedbackSeverity", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'FeedbackSeverity');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="FeedbackSeveritySearch" onclick="HomeSearchClick(event,'FeedbackSeverity','@Html.Raw(Url.Action("Index", "FeedbackSeverity"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
                    @if (User.CanView("FeedbackResource"))
                    {
                       <tr>
						<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackResource" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("FeedbackResource"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "FeedbackResource", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                     	</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "FeedbackResource" })">Feedback Resource</a></td>
                                            <td>Feedback Resource</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringFeedbackResource", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'FeedbackResource');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="FeedbackResourceSearch" onclick="HomeSearchClick(event,'FeedbackResource','@Html.Raw(Url.Action("Index", "FeedbackResource"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                    }
					 @if (User.CanView("JournalEntry"))
				     {
					   <tr>
							<td>
							<div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("Index", "JournalEntry")"><i class="glyphicon glyphicon-eye-open"></i></a>
											</div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("Index", "JournalEntry")">Journal Entry</a></td>
                                            <td>Journal Entry</td>
                                            <td>
                                            </td>
                                        </tr>
                     }
					@if (HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        if (User.CanView("ImportConfiguration"))
                        {
                             <tr>
							<td>
							 <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ImportConfiguration" })"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        @if (User.Identity.IsAuthenticated && User != null && User.CanAdd("ImportConfiguration"))
                                        {
												<a class="btn btn-default btn-xs" onclick=@Html.Raw("NavigateToUrl('" + Url.Action("Create", "ImportConfiguration", new { UrlReferrer = Request.Url, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null) + "');")><i class="glyphicon glyphicon-plus"></i></a>
                                        }                        
                                        </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("RedirectToEntity", "Home", new { EntityName = "ImportConfiguration" })">Import Configuration</a></td>
                                            <td>Import Configuration</td>
                                            <td>
                                                <div class="input-group">
                                                     @Html.TextBox("SearchStringImportConfiguration", ViewBag.CurrentFilter as string, null, new { @class = "form-control fixsearchbox", @onkeypress = "SearchKeyPress(event,'ImportConfiguration');", @placeholder = "Search" })
												<div class="input-group-btn">
													<a id="ImportConfigurationSearch" onclick="HomeSearchClick(event,'ImportConfiguration','@Html.Raw(Url.Action("Index", "ImportConfiguration"))');"
													   data-original-title="List Search"
													   class="btn btn-default btn-default tip-top"
													   style="padding:3px 5px;"><span class="glyphicon glyphicon-search"></span></a>
												</div>
                                                </div>
                                            </td>
                                        </tr>
                        }
                    }
                           @if (HttpContext.Current.User.Identity.IsAuthenticated)
                            {
                                if (User.IsAdmin)
                                {
									 <tr>
							<td>
							 <div style="width:60px; margin-top:-2px;">
                                                    <center>
                                                        <div class="btn-group">
											<a class="btn btn-default btn-xs" href="@Url.Action("Index", "Admin")"><i class="glyphicon glyphicon-eye-open"></i></a>
                                        </div>
                                                    </center>
                                                </div>
                                            </td>
                                            <td><a href="@Url.Action("Index", "Admin")">Admin</a></td>
                                            <td>Admin</td>
                                            <td>
                                            </td>
                                        </tr>
                                }
                            }
							 </table>
                            </div>
	  </div>
        </div>
    </div>
	 <div class="tab-pane fade" id="favorite">
                    <div class="panel panel-default " style="border-radius:0px 0px 4px 4px;">
                        <div class="panel-body">
                            <div class="dashboard-block">
                                <div class="rotate">
                                    <i class="fa fa-star"></i>
                                </div>
                                <div class="details" style="width: 100%;">
                                    <span class="title"> Favorite Items <span class="badge bg-grey">@ViewBag.FavoriteCount</span></span>
                                    <ul style="max-height:100px; overflow:auto; width:100%; padding:0px">
                                        @if (ViewBag.FavoriteItem != null)
                                        {
										 foreach (GeneratorBase.MVC.Models.FavoriteItem fItem in ViewBag.FavoriteItem)
                                            {
                                            if (fItem.LinkAddress.Contains("IsReports=true"))
                                                {
                                                    var EntityNameRef = ModelReflector.Entities.FirstOrDefault(p => p.Name == fItem.EntityName);
                                                    var EntityDispName = EntityNameRef != null ? EntityNameRef.DisplayName : fItem.EntityName;
                                                    @*/@GeneratorBase.MVC.Models.CommonFunction.Instance.AppURL().ToString()@fItem.LinkAddress*@
                                                    <li style="list-style:none; border-bottom:1px solid #ddd; height:30px; padding:5px;">
                                                        <a id="rptViewLink" title="Show Reports of @fItem.Name" class="pull-left" data-placement="top" title="Show Reports" data-original-title="Show Reports" data-toggle="modal" data-target="#ShowReoprts"
                                                           onclick="ViewReports('@fItem.LinkAddress','@EntityDispName');">
                                                            @fItem.Name
                                                        </a>
                                                        <div class="pull-right">
                                                            <a id="rptView" data-placement="top" title="Show Reports of @fItem.Name" data-original-title="Show Reports" data-toggle="modal" data-target="#ShowReoprts"
                                                               onclick="ViewReports('@fItem.LinkAddress','@EntityDispName');">
                                                                <span class="fa fam-page-gear"></span>
                                                            </a>
                                                            <a onclick="deleteReport(@fItem.Id ,'@fItem.Name')"><span class="fam-cross"></span></a>
                                                        </div>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li style="list-style:none; border-bottom:1px solid #ddd; height:30px; padding:5px;">
                                                        <a href='@GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri()@fItem.LinkAddress' class="pull-left" style="width:90%">@fItem.Name</a>
                                                        <a href="@Url.Action("FavoriteDelete", "Home", new { id = fItem.Id })" class="pull-right" style="width:2%"><span class="fam-cross"></span></a>
                                                    </li>
                                                }
											}
                                        }
                                    </ul>
                                </div><!--/details-->
                            </div>
                        </div>
                    </div>
                </div>
	</div>  
  
            
       
		
  </div>
   </div>
}
@if (ViewBag.PageContent != null && ViewBag.PageRoles == null)
{
     <script>
        
        $(document).ready(function () {
            document.getElementsByTagName("html")[0].style.visibility = "visible";

            $("div").remove(".preview");
            $("a").remove(".remove, .drag, .clone, .settings");
            $("div").removeClass("TurantoRow ui-draggable ui-droppable ui-sortable view column row clearfix");
            $(".panel-body").css({ "min-height": "auto" });
            $(".container").css({ "padding": "0px", "margin": "0px", "width": "100%" });
			var userdiv = $(this).find('div#dvuserFavorite');
            if (userdiv != undefined) {
                userdiv.html('');
                userdiv.html($("#dvMyFavorite").html());
            }
        });
    
    </script>

    <link href="~/PageBuilder/css/HomePage1.css" rel="stylesheet" type="text/css" />
    <link href="~/PageBuilder/font-awesome/css/font-awesome.css" rel="stylesheet" />
    
    <script>
    $(window).load(function () {

        // Delay show just to simulate a real page with tons of content to load
        window.setInterval(showPage, 3000);

        function showPage() {
            $('body').show();
        }

    });
    </script>

    <div class="row">
        <div class="col-lg-12" style="padding-right:14px;">
            <h1 class="page-title">
                <i class="glyphicon glyphicon-home text-primary" style="margin-bottom:-20px;"></i> Home
            </h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    @Html.Raw(ViewBag.PageContent)
<div style="clear:both;"></div>
}
<div id="dvMyFavorite" style="display:none">
    @if (ViewBag.FavoriteItem != null)
    {
        foreach (GeneratorBase.MVC.Models.FavoriteItem fItem in ViewBag.FavoriteItem)
        {
            <div class="TurantoRow ui-draggable ui-droppable" style="display: block;">
                <div class="view">
                    <a class="udplink" href="@GeneratorBase.MVC.Models.CommonFunction.Instance.getBaseUri()@fItem.LinkAddress">
                        @fItem.Name
                    </a>
                    <a onclick="deleteFavraite(@fItem.Id ,'@fItem.Name')" class="pull-right" style="margin-top:-30px;position:absolute; right:35px"><span class="fam-cross"></span></a>
                </div>
            </div>
        }
    }
</div>
<div class="modal fade" id="ShowReoprts" tabindex="-1" role="dialog" aria-labelledby="ShowReoprtsLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="ShowReoprtsLabel">Reports of</h4>
            </div>
            <div class="modal-body">
                <div id="LoadReportsDiv"></div>
                <div style="clear:both"></div>
            </div>

        </div>
    </div>
</div>
<script>
    function deleteReport(Id, rptname) {

        var r = confirm("Do you want to delete " + rptname + " report!");
        if (r == true) {
            var thelink = "@Url.Action("DeleteCustomReports", "Reports")";

            $.ajax({
                url: thelink,
                cache: false,
                data: { Id: Id },
                success: function (data) {
                    if (data == "success") {
                        window.location.reload();
                    }

                }
            })
        }
        else {
            return true;
        }

    }
	function deleteFavraite(Id, favname) {

        var r = confirm("Do you want to delete " + favname + " Favorite!");
        if (r == true) {
            var thelink = "@Url.Action("FavoriteDeleteUDF", "Home")";

            $.ajax({
                url: thelink,
                cache: false,
                data: { Id: Id },
                success: function (data) {
                    if (data == "success") {
                        window.location.reload();
                    }

                }
            })
        }
        else {
            return true;
        }

    }
</script>
