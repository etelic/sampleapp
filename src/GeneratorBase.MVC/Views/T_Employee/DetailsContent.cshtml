@model GeneratorBase.MVC.Models.T_Employee
@using PagedList;
@{
    ViewBag.Title = "View Employee";
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Employee");
    var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "Employee";
}
<script>
    $(document).ready(function () {
			 if ($.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') != null) {
				$('a[href="#' + $.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') + '"]').click();
			 }
    });
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.T_EmployeeIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_EmployeeIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_EmployeeIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.T_EmployeeIsSetValueUIRule);
    }
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-title">
            <i class="glyphicon glyphicon-hand-down text-primary"></i> @EntityDisplayName  <i class="glyphicon glyphicon-chevron-right small"></i> <span>View</span>
        </h1>
        <h2 class="text-primary"><span id="HostingEntityDisplayValue">@Html.DisplayFor(model => model.DisplayValue)</span>
			<div class="btn-group pull-right fixactionbut">
            <button data-toggle="dropdown" class="btn btn-xs dropdown-toggle btn-default pull-right">
                Action
                <span class="caret">    </span>
            </button>
			<ul class="dropdown-menu pull-left">               
				<li>
                    @if (User.Identity.IsAuthenticated && User != null && User.CanEdit("T_Employee"))
                    {
                        <a href="@Url.Action("Edit","T_Employee", new { id = Model.Id,  UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)"><i class="glyphicon glyphicon-edit"></i>  Edit</a>
                    }
                </li>             
				<li>
                    @if (User.Identity.IsAuthenticated && User != null && User.CanDelete("T_Employee"))
                    {
                        <a href="@Url.Action("Delete", "T_Employee", new { id = Model.Id, UrlReferrer = Request.Url, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)"><i class="glyphicon glyphicon-remove-sign"></i>  Delete</a>
                    }
                </li>
			</ul>
</div>
		</h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="tabbable responsive">
    <ul class="nav nav-tabs">
	 <li class="active"><a href="#Details" onclick="ClearTabCookie('@User.JavaScriptEncodedName@Model.Id');" data-toggle="tab">Details</a></li>
		 <li @(!User.CanView("T_EmployeeOrganizationAssociation")?"style=display:none;":"")><a onclick="LoadTab('T_EmployeeOrganizationAssociation_T_Employee','@User.JavaScriptEncodedName@Model.Id','@Html.Raw(Url.Action("Index", "T_EmployeeOrganizationAssociation", new {RenderPartial=true, HostingEntity ="T_Employee", HostingEntityID = @Model.Id, AssociatedType = "T_EmployeeOrganizationAssociation_T_Employee",TabToken = DateTime.Now.Ticks,}))')" href="#T_EmployeeOrganizationAssociation_T_Employee" data-toggle="tab">
		 Organization
		 </a></li>
    </ul>
	    <div class="tab-content">
		   <div class="tab-pane fade in active" id="Details">
				 <div class="panel panel-default AppForm">
					<div class="panel-body">
							  <div class='col-sm-12'>
							   <div class="row">
                                   
 @if(User.CanView("T_Employee","T_Picture") && User.CanView("Document"))
{
                                if (!string.IsNullOrEmpty(Html.DisplayFor(model => model.T_Picture).ToString()))
                                {
                                    <div class="col-sm-2 col-md-2" id="dvT_Picture">
                                        <div>
																					<a class="thumbnail" href="#" data-image-id=""
                                               data-toggle="modal"
                                               data-image='@Url.Action("DisplayImage", "Document", new { id = Model.T_Picture,maxSize=30 })" rel="prettyPhoto" title="" style="margin: 0px; padding: 0px;"><img src="@Url.Action("DisplayImageAfterhover", "Document", new { id = Model.T_Picture })'
                                               data-target="#image-galleryT_Picture">
                                                <img src='@Url.Action("DisplayImage", "Document", new { id = Model.T_Picture,maxSize=30 })" rel="prettyPhoto" title="" style="margin: 0px; padding: 0px;"><img src="@Url.Action("DisplayImageAfterhover", "Document", new { id = Model.T_Picture })' alt="T_Picture" class="thumbnail" />
                                            </a>
                                            <div class="caption" style="margin: -40px 0px 0px 0">
                                                <h5 class="text-center">@Html.DisplayNameFor(model => model.T_Picture)</h5>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal fade" id="image-galleryT_Picture" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" class="fa fa-close"></span><span class="sr-only">Close</span></button>
                                                    <h4 class="modal-title" id="image-gallery-title">@Model.DisplayValue</h4>
                                                </div>
                                                <div class="modal-body">
                                                    <img id="image-gallery-image" class="img-responsive" src="">
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm-2 col-md-2" id="dvT_Picture">
                                        <div class="thumbnail">
                                            <img src="~/Content/images/user.png" alt="" class="thumbnail">
                                            <div class="caption" style="margin: -31px 0px -15px 0">
                                                <h5 class="text-center">@Html.DisplayNameFor(model => model.T_Picture)</h5>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
				</div>
		</div>
			<div class="row">
				<div class="col-sm-12 col-md-12 col-xs-12">
			<div class="row">
@if(User.CanView("T_Employee","T_Title"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Title">
	<div class='form-group' title="Title">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_Title) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_Title</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_FirstName"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FirstName">
	<div class='form-group' title="First Name">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_FirstName) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_FirstName</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_MiddleName"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_MiddleName">
	<div class='form-group' title="Middle Name">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_MiddleName) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_MiddleName</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_LastName"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_LastName">
	<div class='form-group' title="Last Name">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_LastName) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_LastName</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_Email"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Email">
	<div class='form-group' title="Email">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_Email) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_Email</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_PhoneNo"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_PhoneNo">
	<div class='form-group' title="Phone No">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_PhoneNo) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_PhoneNo</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_IdentificationNo"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_IdentificationNo">
	<div class='form-group' title="Identification No">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_IdentificationNo) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				
				<p class="viewlabel">@Model.T_IdentificationNo</p>
					
					</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_AssociatedEmployeeTypeID"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AssociatedEmployeeType">
	<div class='form-group' >
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_AssociatedEmployeeTypeID)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		@if (@Model.T_AssociatedEmployeeTypeID == 0 || @Model.T_AssociatedEmployeeTypeID == null || @Model.t_associatedemployeetype == null)
		{
	         <p class="viewlabel"></p>
        }
        else
        {
		     <p class="viewlabel">@Model.t_associatedemployeetype.DisplayValue</p>
        }
		</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_AssociatedEmployeeStatusID"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AssociatedEmployeeStatus">
	<div class='form-group' >
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_AssociatedEmployeeStatusID)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		@if (@Model.T_AssociatedEmployeeStatusID == 0 || @Model.T_AssociatedEmployeeStatusID == null || @Model.t_associatedemployeestatus == null)
		{
	         <p class="viewlabel"></p>
        }
        else
        {
		     <p class="viewlabel">@Model.t_associatedemployeestatus.DisplayValue</p>
        }
		</div>
	</div>
</div>
}
@if(User.CanView("T_Employee","T_EmployeeUserLoginID"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EmployeeUserLogin">
	<div class='form-group' >
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.T_EmployeeUserLoginID)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		@if (@Model.T_EmployeeUserLoginID == "0" || @Model.T_EmployeeUserLoginID == "" || @Model.t_employeeuserlogin == null)
		{
	       <p class="viewlabel"></p>
        }
        else
        {
		<p class="viewlabel">@Model.t_employeeuserlogin.UserName</p>
        }                           
		</div>
	</div>
</div>
}
						@if (User.CanView("T_Employee", "T_EmployeeAddressID") && User.CanView("T_Address"))
						{
							<div class="col-md-12 col-sm-12 col-xs-12" id="dvT_EmployeeAddress">
								<div class="panel panel-default AppForm">
									<div class="panel-sub-heading clearfix">
										<h3 class="panel-title">@Html.LabelFor(model => model.T_EmployeeAddressID)</h3>
										</div>
										<div class="panel-body">
											<div class="row">
												<div class="col-md-12 col-sm-12 col-xs-12">
													<div class="row">
 @if (Model.t_employeeaddress!=null)
 { 
   <div class='col-sm-6' style="display:none;">
    <div class='form-group'>
        <label class="col-xs-5">@Html.LabelFor(model => model.t_employeeaddress.Id)</label>
        <div class="input-group col-xs-7">
            @Html.TextBoxFor(model => model.t_employeeaddress.Id, new { @class = "form-control" })
        </div>
    </div>
 </div>
 }
				@if(User.CanView("T_Address","T_AddressLine1"))
				{
				<div class='col-sm-6 col-md-6 col-xs-12'>
					<div class='form-group' title="AddressLine1">
						<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.t_employeeaddress.T_AddressLine1)</label>
						<div class="input-group col-sm-7 col-md-7 col-xs-12">
						@if (@Model.t_employeeaddress == null)
						{
                        <p class="viewlabel"></p>
                        }
                        else
                        {
                        <p class="viewlabel" >
						@Model.t_employeeaddress.T_AddressLine1</p>
						
                        }
						</div>
					</div>
				</div>
				}
				@if(User.CanView("T_Address","T_AddressLine2"))
				{
				<div class='col-sm-6 col-md-6 col-xs-12'>
					<div class='form-group' title="AddressLine2">
						<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.t_employeeaddress.T_AddressLine2)</label>
						<div class="input-group col-sm-7 col-md-7 col-xs-12">
						@if (@Model.t_employeeaddress == null)
						{
                        <p class="viewlabel"></p>
                        }
                        else
                        {
                        <p class="viewlabel" >
						@Model.t_employeeaddress.T_AddressLine2</p>
						
                        }
						</div>
					</div>
				</div>
				}
				@if(User.CanView("T_Address","T_ZipCode"))
				{
				<div class='col-sm-6 col-md-6 col-xs-12'>
					<div class='form-group' title="ZipCode">
						<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.t_employeeaddress.T_ZipCode)</label>
						<div class="input-group col-sm-7 col-md-7 col-xs-12">
						@if (@Model.t_employeeaddress == null)
						{
                        <p class="viewlabel"></p>
                        }
                        else
                        {
                        <p class="viewlabel" >
						@Model.t_employeeaddress.T_ZipCode</p>
						
                        }
						</div>
					</div>
				</div>
				}
		@if (User.CanView("T_Address", "T_Country"))
		{
			<div class='col-sm-6 col-md-6 col-xs-12'>
				<div class='form-group'>
					<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.t_employeeaddress.T_AddressCountryID) </label>
					<div class="input-group col-sm-7 col-md-7 col-xs-12">
						<p class="viewlabel">@(Model.t_employeeaddress !=null && Model.t_employeeaddress.t_addresscountry != null ? Model.t_employeeaddress.t_addresscountry.DisplayValue : "")</p>
					</div>
				</div>
			</div>
		}
		@if (User.CanView("T_Address", "T_State"))
		{
			<div class='col-sm-6 col-md-6 col-xs-12'>
				<div class='form-group'>
					<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.t_employeeaddress.T_AddressStateID) </label>
					<div class="input-group col-sm-7 col-md-7 col-xs-12">
						<p class="viewlabel">@(Model.t_employeeaddress !=null && Model.t_employeeaddress.t_addressstate != null ? Model.t_employeeaddress.t_addressstate.DisplayValue : "")</p>
					</div>
				</div>
			</div>
		}
		@if (User.CanView("T_Address", "T_City"))
		{
			<div class='col-sm-6 col-md-6 col-xs-12'>
				<div class='form-group'>
					<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.t_employeeaddress.T_AddressCityID) </label>
					<div class="input-group col-sm-7 col-md-7 col-xs-12">
						<p class="viewlabel">@(Model.t_employeeaddress !=null && Model.t_employeeaddress.t_addresscity != null ? Model.t_employeeaddress.t_addresscity.DisplayValue : "")</p>
					</div>
				</div>
			</div>
		}
					
												</div>
											</div>
										</div>
										</div>
											</div>
										</div>
							}
		</div>
				</div>
			</div>
		</div>
			</div>
			<div class="row">
				<div class="col-md-12 col-sm-12 col-xs-12">
					@Html.ActionLink("Back", "Cancel", new { UrlReferrer = Request.UrlReferrer }, new { @class = "btn btn-default btn-sm pull-left formbuttonfix" })
					 @if (User.Identity.IsAuthenticated && User != null && User.CanEdit("T_Employee"))
                     {
                          @Html.ActionLink("Edit", "Edit", new { id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, new { @class = "btn btn-primary btn-sm pull-left formbuttonfix" })
                     }
				</div>
			</div>    
	</div>    
<div class="tab-pane fade in" id="T_EmployeeOrganizationAssociation_T_Employee">
     @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_EmployeeOrganizationAssociation"))
	{
	  // Html.RenderAction("Index", "T_EmployeeOrganizationAssociation", new {RenderPartial=true, HostingEntity = "T_Employee", HostingEntityID = @Model.Id, AssociatedType = "T_EmployeeOrganizationAssociation_T_Employee" }); 
	}
  </div>
	</div> <!-- /tab-content --><br />

<br/>
</div>
 
