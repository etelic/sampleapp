@using Microsoft.AspNet.Identity
@{
    DisplayModeProvider.Instance.RequireConsistentDisplayMode = true;
	var currentController = ViewContext.RouteData.Values["controller"].ToString();
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
	    <meta http-equiv="x-ua-compatible" content="IE=Edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title-Student Maintenance</title>
    @Styles.Render("~/Content/css")
	<link href="@Url.Action("GetThemeCss", "Theme")" rel="stylesheet" type="text/css" />
    @Styles.Render("~/Content/fontawesome")
    @Styles.Render("~/Content/csstheme")
    @Scripts.Render("~/bundles/modernizr")
	 <script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")" type="text/javascript"></script>
	  <script src="@Url.Content("~/Scripts/Entity.js")" type="text/javascript"></script>
	  <script src="@Url.Content("~/Content/slider/js/jquery.slider.min.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/slider/css/jquery.slider.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Content/slider/plugins/jquery.easing.1.3.js")" type="text/javascript"></script>
	   @Scripts.Render("~/bundles/common1")
			 
	   <link href="@Url.Content("~/Content/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
	   <link href="@Url.Content("~/Content/dist/css/bootstrap-colorpicker.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/src/css/docs.css")" rel="stylesheet" type="text/css" />
    <!--[if IE 8]>
            <link href="@Url.Content("~/Content/IE8/ie8.css")" rel="stylesheet" type="text/css" />
    <![endif]-->
    <script>
		 var isClose = false;
        $(document).ready(function () {
            $(window).resize(responsive);
            $(window).trigger('resize');
			if ('@ViewBag.ApplicationError'.length > 0) {
				//alert('@ViewBag.ApplicationError');
				$("#ErrMsg").text('@ViewBag.ApplicationError');
				$("#ErrMsgQuickAdd").text('@ViewBag.ApplicationError');
			}
        });
		$.ajaxSetup({
					beforeSend: function () {
					$('body').css({ 'cursor': 'wait' })
					},
					complete: function () {
					$('body').css({ 'cursor': 'default' });
                isClose = false;
					}
				  });
		function favorite() {
            var thelink = "@Url.Action("FavoriteSave", "Home")";
            var data = $('#Favorite').val();
            $.ajax({
                url: thelink,
                cache: false,
                data: { Id: $('#hdnFavorite').val(), Name: $('#Favorite').val() },
                success: function (data) {
                    if (data == "success") {
                        $('.fa.fa-1x.fa-star').css('color', '#F90');
                        $('#liFavorite').addClass("dropdown").removeClass("dropdown open");
                    }
                    if (data == "error") {
                        $('.fa.fa-1x.fa-star').css('color', '#FFF');
                        $('#lblFavoriteSuceeess').addClass("warning").removeClass("success");
                        $('#lblFavoriteSuceeess').text("Url not added in favourite.");
                    }
                }
            })
            return false;
        }
    </script>
</head>
<body id="@ViewBag.CurrentPage">
    @if (GeneratorBase.MVC.Models.CommonFunction.Instance.EnablePrototypingTool() == "true" && User.Identity.IsAuthenticated && User != null && User.CanAdd("ApplicationFeedback"))
    {
        var EntName = GeneratorBase.MVC.Controllers.BaseController.FavoriteUrlEntityName;
        var PageUrl = GeneratorBase.MVC.Controllers.BaseController.FavoriteUrl;
        string actionName = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
        var prototypeurl = Url.Action("CreateQuick", "ApplicationFeedback", new { EntityName = EntName, FieldName = "_FieldName", PageName = actionName, UIControlName = "_UIControlName", TS = DateTime.Now });
        <script src="@Url.Content("~/Scripts/PrototypeCommenting.js")" type="text/javascript"></script>
         <script>
            document.onmousedown = function (e) {
                e = e || window.event;
                if (e.which == 3) {
                    PrototypeCommenting('@Html.Raw(prototypeurl)', isClose, e);
                }
            }
        </script>
    }
    <div id="wrapper">		
        <div class="navbar navbar-inverse navbar-static-top" role="navigation">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".sidebar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
					<img src="~/logo/logo.gif" class="logoimg" />
                    @Html.ActionLink("Student Maintenance", "Index", "Home", null, new { @class = "navbar-brand" })
                </div>
                <ul class="nav navbar-top-links navbar-right">
					@if (GeneratorBase.MVC.ModelReflector.Entities.Where(p => p.Name == Request.RequestContext.RouteData.Values["controller"].ToString()).Count() > 0)
                    {
                        <li id="liFavorite" class="dropdown">
                            @{
                        string starcolor = GeneratorBase.MVC.Controllers.BaseController.objFavorite == null ? " color: #FFF;" : "color: #F90;";
                        string favoriteId = GeneratorBase.MVC.Controllers.BaseController.objFavorite == null ? "" : GeneratorBase.MVC.Controllers.BaseController.objFavorite.Id.ToString();
                        string favoriteName = GeneratorBase.MVC.Controllers.BaseController.objFavorite == null ? "" : GeneratorBase.MVC.Controllers.BaseController.objFavorite.Name;
                            }
                            <a class="dropdown-toggle" href="#" data-toggle="dropdown"><i class="fa fa-1x fa-star" style="margin-right:5px; @starcolor"></i></a>
                            <div class="dropdown-menu" style="padding: 15px; padding-bottom: 0px;">
                                <form method="post" accept-charset="UTF-8">
                                    <h2>Add to Favorite</h2>
                                    <div class="col-sm-2" style="padding-left:0px;"><label class="label" style="color:#000; padding-left:0px;">Name :</label></div>
                                    <div class="col-sm-4" style="padding-left:10px; margin-right:10px"> <input style="margin-bottom: 15px;" type="text" placeholder="Favourite Name" id="Favorite" name="Favorite" required value="@favoriteName" /></div>
                                    <input type="hidden" id="hdnFavorite" name="hdnFavorite" value="@favoriteId" />
                                    <input class="btn btn-primary btn-block" type="submit" id="save" onclick="return favorite();" value="save" />
                                    <br>
                                </form>
                            </div>
                        </li>
                    }
                    @if (User.Identity.IsAuthenticated && User != null && User.CanView("Reports"))
                    {
					<li class="dropdown bg-green">
                        <a href="@Url.Action("Index", "Reports")">
                            <i class="fa fa-file-text fa-fw ie8-icon">  </i> Reports
                        </a>
                        <!-- /.dropdown-user -->
                    </li>
					}
					@if (HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        if (User.IsAdmin())
                        {
                            <li class="dropdown bg-purpul">
                                <a href="@Url.Action("Index", "Admin")">
                                    <i class="fa fa-cogs fa-fw"> </i> Admin
                                </a>
                                <!-- /.dropdown-user -->
                            </li>
                        }
                    }
                    <!-- /.dropdown -->
                    <li class="dropdown bg-blue">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-user fa-fw"></i>  @User.Name
                              <i class="fa fa-caret-down"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                @Html.ActionLink("Change Password", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })
                            </li>
                           
							<li class="divider"></li>
                            @if (Request.IsAuthenticated)
                            {
                                using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <li>
                                        <a href="javascript:document.getElementById('logoutForm').submit()" style="color:black;"><i class="fa fa-sign-out fa-fw"></i> Logout</a>
                                    </li>
                                }
                            }
							@if (User.CanView("ApplicationFeedback"))
                            {
								<li class="divider"></li>
								<li>
									@Html.ActionLink("Application Feedback", "Index", "ApplicationFeedback", routeValues: null, htmlAttributes: new { title = "Application Feedback" })
								</li>
                            }
							@if ((new GeneratorBase.MVC.Models.UserBasedSecurityContext()).UserBasedSecurities.Count() > 0)
                            {
                                <li class="divider"></li>
                                <li>
                                    <a href="#" style="color:black;"> Security Filter is Active</a>
                                </li>
                            }
                        </ul>
                        <!-- /.dropdown-user -->
                    </li>
                </ul>
            </div>
        </div>		
		@if (HttpContext.Current.User.Identity.IsAuthenticated)
        {
           
        <nav class="navbar-default navbar-static-side" role="navigation">
            <div class="sidebar-collapse">
                <ul class="nav nav-list" id="GA-SideBar">
				 <li @(currentController == "Home" ? "class=active" : "")><a href="@Url.Action("Index", "Home" )"><i class="glyphicon glyphicon-home icon-small"></i>Home</a></li>
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_School"))
					{
					  <li @(currentController == "T_School" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_School"})"><i class="glyphicon glyphicon-list icon-small"></i>School<span class="label label-info pull-right">@ViewBag.T_SchoolCount</a>
								
                      </li>
					 }
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Student"))
					{
					  <li @(currentController == "T_Student" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Student"})"><i class="glyphicon glyphicon-user icon-small"></i>Student<span class="label label-success pull-right">@ViewBag.T_StudentCount</a>
								
                      </li>
					 }
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Department"))
					{
					  <li @(currentController == "T_Department" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Department"})"><i class="glyphicon glyphicon-envelope icon-small"></i>Department<span class="label label-warning pull-right">@ViewBag.T_DepartmentCount</a>
								
                      </li>
					 }
                </ul>
                <!-- /#side-menu -->
            </div>
            <!-- /.sidebar-collapse -->
        </nav>
		<div id="page-wrapper">
                    @RenderBody()
		</div>
        }
    </div>
    <div id="footer">
        <ul class="footer">
            <li>Created by <a href="http://www.turanto.com" target="_blank">Turanto</a></li>&nbsp;&nbsp; | &nbsp;&nbsp;
            <li>Email:<a href="mailto:contact@turanto.com">contact@turanto.com</a></li>
        </ul>
    </div>
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/common2")
    <link href="@Url.Content("~/Content/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
    <script>
        $(document).ready(function () {
            $(".tabbable.responsive").responsiveTabs();
        });
    </script>
    @Scripts.Render("~/bundles/common3")
	<script src="~/Content/dist/js/bootstrap-colorpicker.js"></script>
    <script src="~/Content/src/js/docs.js"></script>
    <script type="text/javascript">
        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }
    </script>
	<script type="text/javascript" charset="utf-8">
	  $('.closeall').click(function () {
            $('.panel-collapse.in')
              .collapse('hide');
        });
        $('.openall').click(function () {
            $('.panel-collapse:not(".in")')
              .collapse('show');
        });
	  $('.collapse').on('shown.bs.collapse', function () {
                $(this).parent().find(".glyphicon-chevron-down").removeClass("glyphicon-chevron-down").addClass("glyphicon-chevron-up");
            }).on('hidden.bs.collapse', function () {
                $(this).parent().find(".glyphicon-chevron-up").removeClass("glyphicon-chevron-up").addClass("glyphicon-chevron-down");
            });
        $(document).ready(function () {
		$('.chosen-single').hover(function () {
$(this).attr("title", $(this).text());
});
            try{
                $("area[rel^='prettyPhoto']").prettyPhoto();
                $(".gallery:first a[rel^='prettyPhoto']").prettyPhoto({ animation_speed: 'normal', theme: 'light_square', slideshow: 3000, autoplay_slideshow: false });
                $(".gallery:gt(0) a[rel^='prettyPhoto']").prettyPhoto({ animation_speed: 'fast', slideshow: 10000, hideflash: true });
                $("#custom_content a[rel^='prettyPhoto']:first").prettyPhoto({
                    custom_markup: '<div id="map_canvas" style="width:260px; height:265px"></div>',
                    changepicturecallback: function () { initialize(); }
                });
                $("#custom_content a[rel^='prettyPhoto']:last").prettyPhoto({
                    custom_markup: '<div id="bsap_1259344" class="bsarocks bsap_d49a0984d0f377271ccbf01a33f2b6d6"></div><div id="bsap_1237859" class="bsarocks bsap_d49a0984d0f377271ccbf01a33f2b6d6" style="height:260px"></div><div id="bsap_1251710" class="bsarocks bsap_d49a0984d0f377271ccbf01a33f2b6d6"></div>',
                    changepicturecallback: function () { _bsap.exec(); }
                });
            } catch (ex) { }
            });
    </script>
    @RenderSection("scripts", required: false)
	 @*div popup window for Quick Add*@
    <div class="modal fade" id="addPopup" tabindex="-1" role="dialog" aria-labelledby="addPopupLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" onclick="cancelQuickAdd()">&times;</button>
                    <center><h4 class="modal-title" id="addPopupLabel">Add EntityName</h4>
					 <div class="text-primary" style="color:red; word-wrap:break-word;" id="dvPopupError"></div>
					</center>
                    <div id="dvPopup" class="modal-body">
                    </div>
                </div>
            </div>
        </div>
    </div>
	<div class="modal fade" id="PopupBulkOperation" tabindex="-1" role="dialog" aria-labelledby="PopupBulkOperationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <center><h4 id="PopupBulkOperationLabel"></h4></center>
                <div id="dvPopupBulkOperation" class="modal-body"  style="padding:0px;">
                </div>
                <button type="button" id="closePopupBulkOperation" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Close</button>
            </div>
        </div>
    </div>
	</div>
	 <script>
    
    document.onkeydown = checkKeycode
    function checkKeycode(e) {
        var keycode;
        if (window.event)
            keycode = window.event.keyCode;
        else if (e)
            keycode = e.which;
        if (keycode == 116) {
            isClose = true;
        }
    }
    function SetClose() {
        isClose = true;
    }
    function bodyUnload() {
        if (isClose == false) {
            var request = GetRequest();
            request.open("GET", "@Url.Action("BrowserClose", "Account")", false);
            request.send();
        }
    }
    function GetRequest() {
        var xmlhttp;
        if (window.XMLHttpRequest) {
            xmlhttp = new XMLHttpRequest();
        }
        else {
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        return xmlhttp;
    }
    </script>
</body>
</html>

