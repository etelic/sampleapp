@using Microsoft.AspNet.Identity
@{
     DisplayModeProvider.Instance.RequireConsistentDisplayMode = true;
	var currentController = ViewContext.RouteData.Values["controller"].ToString();
    var commonObj = GeneratorBase.MVC.Models.CommonFunction.Instance;
    var AppName = commonObj.AppName();
    var Compprofile = commonObj.getCompanyProfile();
    var timeoutAlert = commonObj.ApplicationSessionTimeOutAlert();
    var onloadEvent = timeoutAlert == "true" ? "onload=initSession()".ToString() : "";

	var MainEntityValue = "All";
    if (User.MultiTenantLoginSelected != null && User.MultiTenantLoginSelected.Count() > 0)
    { 
        MainEntityValue = User.MultiTenantLoginSelected[0].T_MainEntityValue;
    }
    var url = Url.Content("~/logo/logo.gif");
    if (HttpContext.Current.Request.Url.Host == "localhost")
    { url = Url.Content("~/logo/logo.gif"); }
    var AppIcon = Compprofile.Icon == null || Compprofile.Icon == "logo.gif" ? url : "data:image/jpeg;base64," + Compprofile.Icon;
    var AppIconWidth = Compprofile.IconWidth == null ? "28px" : Compprofile.IconWidth;
    var AppIconHeight = Compprofile.IconHeight == null ? "28px" : Compprofile.IconHeight;
} 
<!DOCTYPE html>
<html>

<head>
 @if (commonObj.EnableGoogleAnalytics().ToLower() == "true")
    {
        var trackId = commonObj.TrackingID();
        var customdimensionname = "";
        if (commonObj.CustomDimensionName().ToLower() != "none")
        {
            var customdimensionnameval = commonObj.CustomDimensionName();
            customdimensionname = "ga('create', '" + trackId + "', {'" + customdimensionnameval + "': username});" +
            "ga('set', '&uid', username);" +
            "ga('require', 'displayfeatures');" +
            "ga('set', 'dimension1', username);" +
            "ga('send', 'pageview');";
        }
        else
        {
            customdimensionname = "ga('create', '" + trackId + "', 'auto');" +
                "ga('send', 'pageview');";
        }
        <script>
            var username = '@User.Name';
            (function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
            @Html.Raw(customdimensionname)
        </script>
    }
    <meta charset="utf-8" />
	    <meta http-equiv="x-ua-compatible" content="IE=Edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title-@AppName.ToString()</title>
	    <link rel="icon" href="~/Content/images/turanto.ico" type="image/x-icon">
    <link rel="shortcut icon" href="~/Content/images/turanto.ico" type="image/x-icon">
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/fontawesome")
    @Styles.Render("~/Content/csstheme")
    @Scripts.Render("~/bundles/modernizr")
	 <script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")" type="text/javascript"></script>
	  <script src="@Url.Content("~/Scripts/Entity.js")" type="text/javascript"></script>
	<script src="~/Scripts/jquery-ui.js"></script>
	   @Scripts.Render("~/bundles/common1")
	   	 
    <!--[if IE 8]>
            <link href="@Url.Content("~/Content/IE8/ie8.css")" rel="stylesheet" type="text/css" />
    <![endif]-->
<script type="text/javascript">
    function cookieExists(name) {
        var nameToFind = name + "=";
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            if (cookies[i].trim().indexOf(nameToFind) === 0) return true;
        }
        return false;
    }
    if (!cookieExists("_timeZoneOffset")) {
        var now = new Date();
        var timeZoneOffset = -now.getTimezoneOffset();  // in minutes
        now.setTime(now.getTime() + 1 * 24 * 60 * 60 * 1000); // keep it for 1 days
        document.cookie = "_timeZoneOffset=" + timeZoneOffset.toString() + ";expires=" + now.toGMTString() + ";path=/;" + document.cookie;
    }
    </script>
    <script>
		 var isClose = false;
        $(document).ready(function () {
            $(window).resize(responsive);
            $(window).trigger('resize');
			if ('@ViewBag.ApplicationError'.length > 0) {
				//alert('@ViewBag.ApplicationError');
				$("#ErrMsg").text('@ViewBag.ApplicationError');
				$("#ErrMsgQuickAdd").text('@ViewBag.ApplicationError');

				$("#divDisplayCodeFragment").removeAttr("style");
			    $("#divDisplayCodeFragment").html(getMsgTableCodeFragment());
			    $("#ErrmsgtrCodeFragment").text('@ViewBag.ApplicationError');
			}
        });
		$.ajaxSetup({
					beforeSend: function () {
					    $('body').css({ 'cursor': 'wait' })
					   
					},
					complete: function (xhr, status) {
					    $('body').css({ 'cursor': 'default' });
					    
                LoginRequired(xhr.status);
            }
        });

        function LoginRequired(response_data) {
            if (response_data == "400")
                window.location.href = "@Url.Action("Login","Account")";

        }
		function favorite() {
            var thelink = "@Url.Action("FavoriteSave", "Home")";
            var data = $('#Favorite').val();
            $.ajax({
                url: thelink,
                cache: false,
                data: { Id: $('#hdnFavorite').val(), Name: $('#Favorite').val() },
                success: function (data) {
                    if (data == "success") {
                        $('.fa.fa-1x.fa-star').css('color', '#F90');
                        $('#liFavorite').addClass("dropdown").removeClass("dropdown open");
                    }
                    if (data == "error") {
                        $('.fa.fa-1x.fa-star').css('color', '#FFF');
                        $('#lblFavoriteSuceeess').addClass("warning").removeClass("success");
                        $('#lblFavoriteSuceeess').text("Url not added in favourite.");
                    }
                }
            })
            return false;
        }
    </script>
	  <script>
        $(function () {
            $(".limit").each(function (i) {
                len = $(this).text().length;
                if (len > 2) {
                    $(this).text($(this).text().substr(0, 1));
                }
            });
        });
       
    </script>
</head>
<body id="@ViewBag.CurrentPage" @onloadEvent>
    @if (commonObj.EnablePrototypingTool() == "true" && User.Identity.IsAuthenticated && User != null && User.CanAdd("ApplicationFeedback"))
    {
        var EntName = GeneratorBase.MVC.Controllers.BaseController.FavoriteUrlEntityName;
        var PageUrl = GeneratorBase.MVC.Controllers.BaseController.FavoriteUrl;
        string actionName = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
        var prototypeurl = Url.Action("CreateQuick", "ApplicationFeedback", new { EntityName = EntName, FieldName = "_FieldName", PageName = actionName, UIControlName = "_UIControlName", TS = DateTime.Now });
        <script src="@Url.Content("~/Scripts/PrototypeCommenting.js")" type="text/javascript"></script>
         <script>
            document.onmousedown = function (e) {
                e = e || window.event;
                if (e.which == 3) {
                    PrototypeCommenting('@Html.Raw(prototypeurl)', isClose, e);
                }
            }
        </script>
    }
  		
        <div class="navbar navbar-inverse navbar-static-top" role="navigation">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".sidebar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
					<img src="@AppIcon" style="width:@AppIconWidth; height:@AppIconHeight;" class="logoimg" />
                    @Html.ActionLink(AppName.ToString(), "Index", "Home", null, new { @class = "navbar-brand" })
                </div>
                <ul class="nav navbar-top-links navbar-right">
					@if (GeneratorBase.MVC.ModelReflector.Entities.Where(p => p.Name == Request.RequestContext.RouteData.Values["controller"].ToString()).Count() > 0)
                    {
                        <li id="liFavorite" class="dropdown">
                            @{
                        string starcolor = GeneratorBase.MVC.Controllers.BaseController.objFavorite == null ? " color: #FFF;" : "color: #F90;";
                        string favoriteId = GeneratorBase.MVC.Controllers.BaseController.objFavorite == null ? "" : GeneratorBase.MVC.Controllers.BaseController.objFavorite.Id.ToString();
                        string favoriteName = GeneratorBase.MVC.Controllers.BaseController.objFavorite == null ? "" : GeneratorBase.MVC.Controllers.BaseController.objFavorite.Name;
                            }
                            <a class="dropdown-toggle" href="#" data-toggle="dropdown"><i class="fa fa-1x fa-star" style="margin-right:5px; @starcolor"></i></a>
                            <div class="dropdown-menu" style="padding: 15px; padding-bottom: 0px;">
                                <form method="post" accept-charset="UTF-8">
                                    <h2>Add to Favorite</h2>
                                    <div class="col-sm-2" style="padding-left:0px;"><label class="label" style="color:#000; padding-left:0px;">Name :</label></div>
                                    <div class="col-sm-4" style="padding-left:10px; margin-right:10px"> <input style="margin-bottom: 15px;" type="text" placeholder="Favourite Name" id="Favorite" name="Favorite" required value="@favoriteName" /></div>
                                    <input type="hidden" id="hdnFavorite" name="hdnFavorite" value="@favoriteId" />
                                    <input class="btn btn-primary btn-block" type="submit" id="save" onclick="return favorite();" value="save" />
                                    <br>
                                </form>
                            </div>
                        </li>
                    }
                    @if (User.Identity.IsAuthenticated && User != null && User.CanView("Reports"))
                    {
					<li class="dropdown bg-green">
                        <a href="@Url.Action("Index", "Reports")">
                            <i class="fa fa-file-text fa-fw ie8-icon">  </i> Reports
                        </a>
                        <!-- /.dropdown-user -->
                    </li>
					}
					@if (HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        if (User.HasAdminPrivileges())
                        {
                            <li class="dropdown bg-purpul">
                                <a href="@Url.Action("Index", "Admin")">
                                    <i class="fa fa-cogs fa-fw"> </i> Admin
                                </a>
                                <!-- /.dropdown-user -->
                            </li>
                        }
                    }
                    <!-- /.dropdown -->
                    <li class="dropdown bg-blue">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-user fa-fw"></i>  @User.Name
                              <i class="fa fa-caret-down"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                @Html.ActionLink("Change Password", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })
                            </li>
                           
							<li class="divider"></li>
                            @if (Request.IsAuthenticated)
                            {
                                using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                                {
                                    @Html.AntiForgeryToken()
                                     <li>
                                    <a id="logoutbtn" onclick="logoutform();" style="color:black;"><i class="fa fa-sign-out fa-fw"></i> Logout</a>
                                </li>
                                <script>
                                    function logoutform() {
                                        ClearFilterCookies();
                                        $("#logoutForm").submit();
                                    }
                                </script>
                                }
                            }
							@if (User.Identity.IsAuthenticated && User.CanView("ApplicationFeedback"))
                            {
								<li class="divider"></li>
								<li>
									@Html.ActionLink("Application Feedback", "Index", "ApplicationFeedback", routeValues: null, htmlAttributes: new { title = "Application Feedback" })
								</li>
                            }
							@if ((new GeneratorBase.MVC.Models.UserBasedSecurityContext()).UserBasedSecurities.Count() > 0)
                            {
                                <li class="divider"></li>
                                <li>
                                    <a href="#" style="color:black;"> Security Filter is Active</a>
                                </li>
                            }
                        </ul>
                        <!-- /.dropdown-user -->
                    </li>
                </ul>
            </div>
        </div>	
		 @{ var sidebarId = (currentController != "UserDefinePages") ? "wrapper" : "";
			var sidebarClass = (currentController != "UserDefinePages") ? "toggled-2" : "";
			sidebarClass = (currentController != "UserDefinePages" && Request.Cookies["sidebartoggle" + HttpUtility.UrlEncode(User.Name)] != null) ? Request.Cookies["sidebartoggle" + HttpUtility.UrlEncode(User.Name) + ""].Value : "";
		  }
	 @RenderSection("scripts", required: false)
	 @*div popup window for Quick Add*@
    <div class="modal fade" id="addPopup" tabindex="-1" role="dialog" aria-labelledby="addPopupLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" onclick="cancelQuickAdd()">&times;</button>
                    <center><h4 class="modal-title" id="addPopupLabel">Add EntityName</h4>
					 <div class="text-primary" style="color:red; word-wrap:break-word;" id="dvPopupError"></div>
					</center>
                    <div id="dvPopup" class="modal-body">
                    </div>
                </div>
            </div>
        </div>
    </div>
	<div class="modal fade" id="PopupBulkOperation" tabindex="-1" role="dialog" aria-labelledby="PopupBulkOperationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <center><h4 id="PopupBulkOperationLabel"></h4></center>
                <div id="dvPopupBulkOperation" class="modal-body"  style="padding:0px;">
                </div>
                <button type="button" id="closePopupBulkOperation" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Close</button>
            </div>
        </div>
    </div>
	</div>
    <div id="@sidebarId" class="@sidebarClass">
		@if (HttpContext.Current.User.Identity.IsAuthenticated)
        {
			var homecls = (currentController != "UserDefinePages") ? "page-content-wrapper" : "";
            var tooglecls = (currentController != "UserDefinePages") ? "" : "style=display:none;";
        if (currentController != "UserDefinePages")
            {
            <div id="sidebar-wrapper">
                  <ul class="sidebar-nav nav-pills nav-stacked toggled" id="menu">
				 <li @(currentController == "Home" ? "class=active" : "")>
					<a  href="@Url.Action("Index", "Home" )">
						<span class="fa-stack fa-lg pull-left" style=" margin: 0px 9px 0px 3px;"><i class="glyphicon glyphicon-home fa-stack-1x"></i></span>Home
					</a>
					<a class="pull-right" style="color:black !important; margin: -40px 9px 0px 0px; background:transparent;" @tooglecls data-toggle="collapse" id="menu-toggle-2" onclick="togglesidebar(event, this, '@User.JavaScriptEncodedName');"> <span class="fa fa-thumb-tack" title="Hide/Unhinde" aria-hidden="true"></span></a>
                           
                 </li>
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Client"))
					{
					  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Client");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Client";
					  <li id="liT_Client" @(currentController == "T_Client" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Client"})"><label class="LimitSidebar pull-left limit">@DisplayString</label>@DisplayString<span class="label label-default pull-right" style="display:none">@ViewBag.T_ClientCount</span></a>
								
                      </li>
					 }
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_TimeSlots"))
					{
					  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_TimeSlots");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Time Slots";
					  <li id="liT_TimeSlots" @(currentController == "T_TimeSlots" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_TimeSlots"})"><label class="LimitSidebar pull-left limit">@DisplayString</label>@DisplayString<span class="label label-default pull-right" style="display:none">@ViewBag.T_TimeSlotsCount</span></a>
								
                      </li>
					 }
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_LearningCenter"))
					{
					  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_LearningCenter");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Learning Center";
					  <li id="liT_LearningCenter" @(currentController == "T_LearningCenter" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_LearningCenter"})"><label class="LimitSidebar pull-left limit">@DisplayString</label>@DisplayString<span class="label label-default pull-right" style="display:none">@ViewBag.T_LearningCenterCount</span></a>
								
                      </li>
					 }
					@if (User.Identity.IsAuthenticated && User != null && User.CanView("T_Session"))
					{
					  var EntityReflectorObj = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_Session");
                      var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Session";
					  <li id="liT_Session" @(currentController == "T_Session" ? "class=active" : "")>
								<a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Session"})"><label class="LimitSidebar pull-left limit">@DisplayString</label>@DisplayString<span class="label label-default pull-right" style="display:none">@ViewBag.T_SessionCount</span></a>
								
                      </li>
					 }
			<li id="liT_Schedule" @(currentController == "T_Schedule" ? "class=active" : "")>
                          <a href="@Url.Action("ShowFullCalendar", "T_Schedule", new { EntityName = "T_Schedule" })"><label class="LimitSidebar pull-left limit">Calendar</label>Calendar<span class="label label-default pull-right" style="display:none"></span></a>

			</li>
						 @if (User.Identity.IsAuthenticated && User != null && User.CanView("T_TimeSlots"))
			 {
                            var DisplayString = "Master Schedule";
                            <li id="liT_TimeSlots" @(currentController == "T_TimeSlots" ? "class=active" : "")>
                                <a href="@Url.Action("Index", "T_TimeSlots", new { viewtype="SlotIndexPartial" })"><label class="LimitSidebar pull-left limit">@DisplayString</label>@DisplayString<span class="label label-default pull-right" style="display:none">@ViewBag.T_TimeSlotsCount</span></a>
                            </li>
             }
 
                </ul>
                <!-- /#side-menu -->
            </div>
            <!-- /.sidebar-collapse -->
          }
            <div id="@homecls">
                <div class="container-fluid xyz">
                    <div class="row">
                        <div class="col-lg-12">
                            @RenderBody()
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
	 <div style="clear:both"></div>
	 @if (commonObj.IsPrivacyPolicy())
    {
        <div id="footer">
            <footer class="footer">
                <div class="container-fluid">
                    <span class="text-muted pull-left">
                        @commonObj.CreatedBy() <a href="@commonObj.CreatedByLink()" target="_blank">@commonObj.CreatedByName()</a> |
                        @commonObj.Emailto():<a href="@Html.Encode("mailto:" + commonObj.EmailtoAddress())">@commonObj.EmailtoAddress()</a>
                    </span>
                    <span class="text-muted pull-right">
                        <a href="@Html.Encode(commonObj.getBaseUri() + commonObj.LegalLink())" target="_blank">@commonObj.Legal()</a>
                        | <a href="@Html.Encode(commonObj.getBaseUri() + commonObj.TermsLink())" target="_blank">
                            @commonObj.Terms()
                        </a> | <a href="@Html.Encode(commonObj.getBaseUri() + commonObj.PolicyLink())" target="_blank">
                            @commonObj.Policy()
                        </a>
                    </span>
                </div>
            </footer>
        </div>
    }
    else
    {
        <div id="footer">
            <ul class="footer">
                <li>Created With <a href="http://www.turanto.com" target="_blank">Turanto</a></li>&nbsp;&nbsp; | &nbsp;&nbsp;
                <li>Email:<a href="mailto:contact@turanto.com">contact@turanto.com</a></li>
            </ul>
        </div>
    }
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/common2")
    @Scripts.Render("~/bundles/common3")
	<script src="~/Content/dist/js/bootstrap-colorpicker.js"></script>
    <script src="~/Content/src/js/docs.js"></script>
    <script type="text/javascript">
        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }
    </script>
	
	 <script>
    
    document.onkeydown = checkKeycode
    function checkKeycode(e) {
        var keycode;
        if (window.event)
            keycode = window.event.keyCode;
        else if (e)
            keycode = e.which;
        if (keycode == 116) {
            isClose = true;
        }
    }
    function SetClose() {
        isClose = true;
    }
    function bodyUnload() {
        if (isClose == false) {
            var request = GetRequest();
            request.open("GET", "@Url.Action("BrowserClose", "Account")", false);
            request.send();
        }
    }
    function GetRequest() {
        var xmlhttp;
        if (window.XMLHttpRequest) {
            xmlhttp = new XMLHttpRequest();
        }
        else {
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        return xmlhttp;
    }
    </script>
	  @if (timeoutAlert == "true")
    {
        var expirationMinutes =commonObj.ApplicationSessionTimeOut();
        <script>
            var sess_expirationMinutes = parseInt(@expirationMinutes)
            var sess_warningMinutes = sess_expirationMinutes - 5;
            var sess_pollInterval = 60000;
            if (sess_expirationMinutes <= 5)
                sess_warningMinutes = sess_expirationMinutes - 1;

        </script>
    }
<script>
    jQuery('body').on('focus', '.chosen-container-single input', function () {
        if (!jQuery(this).closest('.chosen-container').hasClass('chosen-container-active')) {
            jQuery(this).closest('.chosen-container').prev().trigger('chosen:open');
        }
    });
        $('.modal-dialog').draggable({
            handle: ".modal-title"
        });
    </script>
</body>
</html>

